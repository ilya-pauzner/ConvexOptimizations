test of method without moments with n = 3 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 13.52616000175476
min loss: 0.040601123
iterations: 4
calls to oracles: 112

test of method without moments with n = 4 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 23.532623767852783
min loss: 0.0109682
iterations: 7
calls to oracles: 161

test of method without moments with n = 3 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 26.509021997451782
min loss: 0.00047702962
iterations: 10
calls to oracles: 196

test of method without moments with n = 6 and p = 3 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 32.736382722854614
min loss: 0.0034030199
iterations: 6
calls to oracles: 154

test of method without moments with n = 8 and p = 4 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 55.143051862716675
min loss: 0.002038113
iterations: 9
calls to oracles: 203

test of method without moments with n = 10 and p = 5 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 55.644230365753174
min loss: 0.0054705353
iterations: 8
calls to oracles: 175

test of method with armijo moment with n = 3 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 41.24878120422363
min loss: 0.038003247
iterations: 4
calls to oracles: 125

test of method without moments with n = 6 and p = 3 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 75.88873839378357
min loss: 0.17701533
iterations: 20
calls to oracles: 308

test of method without moments with n = 12 and p = 6 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 80.58342409133911
min loss: 0.0024425779
iterations: 9
calls to oracles: 203

test of method without moments with n = 8 and p = 4 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 86.6387734413147
min loss: 0.16937687
iterations: 18
calls to oracles: 273

test of method without moments with n = 14 and p = 7 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 97.29937791824341
min loss: 0.0030627649
iterations: 10
calls to oracles: 210

test of method without moments with n = 12 and p = 6 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 99.48281359672546
min loss: 0.1662788
iterations: 15
calls to oracles: 238

test of method without moments with n = 10 and p = 5 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 100.13414359092712
min loss: 0.1666338
iterations: 17
calls to oracles: 266

test of method with armijo moment with n = 3 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 111.37012434005737
min loss: 0.0005506854
iterations: 11
calls to oracles: 272

test of method with extrapolation moment with n = 3 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 122.1047432422638
min loss: 0.041623645
iterations: 18
calls to oracles: 333

test of method with armijo moment with n = 4 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 96.2669734954834
min loss: 0.01106775
iterations: 6
calls to oracles: 182

test of method without moments with n = 4 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 123.15055966377258
min loss: 0.0005333579
iterations: 34
calls to oracles: 539

test of method with armijo moment with n = 6 and p = 3 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 130.9442822933197
min loss: 0.17815754
iterations: 10
calls to oracles: 225

test of method with extrapolation moment with n = 4 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 143.67990922927856
min loss: 0.012391003
iterations: 17
calls to oracles: 338

test of method without moments with n = 14 and p = 7 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 151.13838267326355
min loss: 0.1657308
iterations: 20
calls to oracles: 308

test of method with armijo moment with n = 6 and p = 3 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 124.81583857536316
min loss: 0.0021288558
iterations: 7
calls to oracles: 208

test of method with armijo moment with n = 8 and p = 4 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 181.69521260261536
min loss: 0.16979273
iterations: 11
calls to oracles: 251

test of method with armijo moment with n = 10 and p = 5 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 209.32968759536743
min loss: 0.16719083
iterations: 11
calls to oracles: 234

test of method with extrapolation moment with n = 8 and p = 4 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 224.53235578536987
min loss: 0.0018870394
iterations: 16
calls to oracles: 329

test of method with extrapolation moment with n = 10 and p = 5 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 254.9814293384552
min loss: 0.0022356831
iterations: 16
calls to oracles: 322

test of method with armijo moment with n = 12 and p = 6 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 222.93858742713928
min loss: 0.0029225617
iterations: 8
calls to oracles: 228

test of method with armijo moment with n = 8 and p = 4 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 238.76426005363464
min loss: 0.0012210621
iterations: 7
calls to oracles: 231

test of method with armijo moment with n = 4 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 318.98185563087463
min loss: 0.00080491795
iterations: 20
calls to oracles: 479

test of method with armijo moment with n = 10 and p = 5 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 263.6377377510071
min loss: 0.0032629846
iterations: 8
calls to oracles: 235

test of method with armijo moment with n = 12 and p = 6 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 375.93658924102783
min loss: 0.16602433
iterations: 15
calls to oracles: 323

test of method with armijo moment with n = 14 and p = 7 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 323.2940785884857
min loss: 0.0018288027
iterations: 9
calls to oracles: 259

test of method with extrapolation moment with n = 12 and p = 6 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 398.66457867622375
min loss: 0.0049988157
iterations: 20
calls to oracles: 386

test of method with armijo moment with n = 14 and p = 7 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 432.01519203186035
min loss: 0.16596502
iterations: 14
calls to oracles: 313

test of method with extrapolation moment with n = 14 and p = 7 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 506.2949607372284
min loss: 0.003088319
iterations: 22
calls to oracles: 418

test of method with extrapolation moment with n = 6 and p = 3 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 676.1178758144379
min loss: 0.0019576775
iterations: 42
calls to oracles: 738

test of method without moments with n = 3 and p = 1 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 14.92917537689209
min loss: 0.040019013
iterations: 5
calls to oracles: 126

test of method without moments with n = 4 and p = 1 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 24.9019992351532
min loss: 0.010589369
iterations: 7
calls to oracles: 161

test of method without moments with n = 6 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 40.77232837677002
min loss: 0.001981521
iterations: 8
calls to oracles: 182

test of method without moments with n = 8 and p = 2 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 50.16153621673584
min loss: 0.0027676993
iterations: 8
calls to oracles: 182

test of method without moments with n = 6 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 52.338484048843384
min loss: 0.17781812
iterations: 14
calls to oracles: 224

test of method without moments with n = 8 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 53.44095206260681
min loss: 0.16926385
iterations: 11
calls to oracles: 182

test of method without moments with n = 3 and p = 1 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 57.72188711166382
min loss: 0.00061888865
iterations: 21
calls to oracles: 350

test of method without moments with n = 10 and p = 3 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 75.67009830474854
min loss: 0.0013926155
iterations: 9
calls to oracles: 203

test of method without moments with n = 12 and p = 4 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 81.28516888618469
min loss: 0.0024453856
iterations: 9
calls to oracles: 196

test of method without moments with n = 14 and p = 5 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 88.8575210571289
min loss: 0.003964694
iterations: 8
calls to oracles: 182

test of method without moments with n = 10 and p = 3 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 109.73218822479248
min loss: 0.16677438
iterations: 18
calls to oracles: 280

test of method without moments with n = 20 and p = 5 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 139.35665678977966
min loss: 0.0037608128
iterations: 9
calls to oracles: 196

test of method without moments with n = 20 and p = 4 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 140.06858921051025
min loss: 0.004327322
iterations: 9
calls to oracles: 196

test of method without moments with n = 25 and p = 1 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 145.74265432357788
min loss: 0.0034492442
iterations: 8
calls to oracles: 182

test of method without moments with n = 20 and p = 3 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 145.9250843524933
min loss: 0.002680577
iterations: 9
calls to oracles: 203

test of method without moments with n = 12 and p = 4 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 149.66772389411926
min loss: 0.1660014
iterations: 20
calls to oracles: 308

test of method without moments with n = 14 and p = 5 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 160.37513518333435
min loss: 0.16577025
iterations: 19
calls to oracles: 294

test of method without moments with n = 20 and p = 6 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 161.7190613746643
min loss: 0.0023417827
iterations: 10
calls to oracles: 217

test of method without moments with n = 25 and p = 6 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 162.19990015029907
min loss: 0.003662576
iterations: 9
calls to oracles: 196

test of method without moments with n = 25 and p = 5 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 176.60549879074097
min loss: 0.0030726425
iterations: 9
calls to oracles: 196

test of method without moments with n = 4 and p = 1 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 182.80611991882324
min loss: 0.00048323127
iterations: 42
calls to oracles: 644

test of method without moments with n = 25 and p = 3 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 183.1989724636078
min loss: 0.002003407
iterations: 9
calls to oracles: 203

test of method without moments with n = 25 and p = 4 and func lambda x: 2 * x * x - 1 gave the folowing results:
elapsed: 197.11552238464355
min loss: 0.0015651454
iterations: 10
calls to oracles: 217

test of method without moments with n = 20 and p = 5 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 200.73534750938416
min loss: 0.166114
iterations: 17
calls to oracles: 273

test of method with extrapolation moment with n = 8 and p = 3 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 162.9328408241272
min loss: 0.16939577
iterations: 9
calls to oracles: 175

test of method without moments with n = 25 and p = 4 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 220.51938271522522
min loss: 0.16581109
iterations: 15
calls to oracles: 238

test of method without moments with n = 20 and p = 4 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 224.34335255622864
min loss: 0.16581418
iterations: 19
calls to oracles: 294

test of method without moments with n = 20 and p = 3 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 232.1684272289276
min loss: 0.16593876
iterations: 18
calls to oracles: 287

test of method without moments with n = 25 and p = 3 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 236.02229380607605
min loss: 0.16600797
iterations: 16
calls to oracles: 252

test of method with extrapolation moment with n = 6 and p = 2 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 202.93345975875854
min loss: 0.17757584
iterations: 13
calls to oracles: 232

test of method without moments with n = 20 and p = 6 and func lambda x: -tf.math.cos(x * math.pi) gave the folowing results:
elapsed: 270.73677253723145
min loss: 0.16566004
iterations: 21
calls to oracles: 322
